name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_ORG: sheharaa

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-frontend:latest

      - name: Build & push analytics-service
        uses: docker/build-push-action@v4
        with:
          context: ./services/analytics-service
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-analytics-service:latest

      - name: Build & push game-service
        uses: docker/build-push-action@v4
        with:
          context: ./game-service
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-game-service:latest

      - name: Build & push order-service
        uses: docker/build-push-action@v4
        with:
          context: ./order-service
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-order-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy updated manifests to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: |
            "frontend/*.yaml,game-service/*.yaml,order-service/*.yaml,k8s/analytics/*.yaml,scripts/integration-tests.sh,ingress.yaml"
          target: ~/CMM707

      - name: SSH & deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          port: 22
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            cd ~/CMM707

            # Apply updated manifests
            kubectl apply -f frontend/frontend-deployment.yaml
            kubectl apply -f game-service/game-deployment.yaml
            kubectl apply -f order-service/order-deployment.yaml
            kubectl apply -f ingress.yaml
            kubectl apply -f k8s/analytics/clickhouse-single.yaml
            kubectl apply -f k8s/analytics/analytics-deployment.yaml
            kubectl apply -f k8s/analytics/analytics-service.yaml
            kubectl apply -f k8s/analytics/analytics-ingress.yaml

            # Perform rolling update
            kubectl set image deployment/lugx-frontend \
              lugx-frontend=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-frontend:latest
            kubectl rollout status deployment/lugx-frontend

            kubectl set image deployment/game-service \
              game-service=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-game-service:latest
            kubectl rollout status deployment/game-service

            kubectl set image deployment/order-service \
              order-service=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-order-service:latest
            kubectl rollout status deployment/order-service

            kubectl set image deployment/analytics-service \
              analytics-service=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/lugx-analytics-service:latest
            kubectl rollout status deployment/analytics-service

  integration-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: SSH & run integration tests
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.EC2_HOST }}
          port:     22
          username: ubuntu
          key:      ${{ secrets.EC2_SSH_KEY }}
          script: |
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

            # Make lugx.local resolve to localhost inside EC2
            echo "127.0.0.1 lugx.local" | sudo tee -a /etc/hosts

            # Run your test suite with full tracing
            cd ~/CMM707/scripts
            set -euxo pipefail
            bash -x ./integration-tests.sh
