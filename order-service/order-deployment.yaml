apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: order-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: order-db-init
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS orders (
      order_id VARCHAR(20) PRIMARY KEY,
      customer_name VARCHAR(100),
      items JSON,
      total_price NUMERIC(10,2),
      order_date DATE
    );
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-postgres
  template:
    metadata:
      labels:
        app: order-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: ordersdb
        - name: POSTGRES_USER
          value: orderuser
        - name: POSTGRES_PASSWORD
          value: orderpass
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
        - name: db-init
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: order-postgres-pvc
      - name: db-init
        configMap:
          name: order-db-init
          items:
          - key: init.sql
            path: init.sql
---
apiVersion: v1
kind: Service
metadata:
  name: order-postgres
spec:
  selector:
    app: order-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: order-service
        imagePullPolicy: Never
        env:
        - name: DB_HOST
          value: order-postgres
        - name: DB_NAME
          value: ordersdb
        - name: DB_USER
          value: orderuser
        - name: DB_PASS
          value: orderpass
        ports:
        - containerPort: 8001
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  type: NodePort
  selector:
    app: order-service
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
      nodePort: 30009

